#include <benchmark/benchmark.h>

#include "macros/macros.hpp"

#include "pear_tree.hpp"
#include "../micro_benchmark_fixture.hpp"

#define NODE_SIZE_INSERT(NAME,TREE_TYPE) \
BENCHMARK_TEMPLATE_DEFINE_F(MicroBenchmarkFixture, NODE_SIZE_INSERT_ ## NAME, argument_type<void(TREE_TYPE)>::type)(benchmark::State& state) { \
    eval_insert_benchmark_hyperthreading(SZ_TAXI_100M, SZ_TAXI_200M + SZ_TAXI_XL_INITIAL_POINTS_AMONT, state, *this);                     \
} \
BENCHMARK_REGISTER_F(MicroBenchmarkFixture, NODE_SIZE_INSERT_ ## NAME)->Unit(benchmark::kMillisecond)->INSERT_ITERATIONS_AND_REPETITIONS->UseRealTime()->Args({(SZ_TAXI_XL_INITIAL_POINTS_AMONT), ((SZ_TAXI_XL_ADDED_POINTS_AMONT)), OPTIMAL_NUMBER_INSERT_THREADS});

NODE_SIZE_INSERT(38_4, (PearTree<38, 4, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(38_8, (PearTree<38, 8, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(38_12, (PearTree<38, 12, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(38_16, (PearTree<38, 16, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(38_19, (PearTree<38, 19, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(30_10, (PearTree<30, 10, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(46_14, (PearTree<46, 14, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(54_16, (PearTree<54, 16, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_INSERT(62_18, (PearTree<62, 18, float, PEAR_STRAT_BASIC_VERSION(1024)>))


#define NODE_SIZE_QUERY(NAME, TREE_TYPE) \
BENCHMARK_TEMPLATE_DEFINE_F(MicroBenchmarkFixture, NODE_SIZE_QUERY_POINT_ ## NAME, argument_type<void(TREE_TYPE)>::type)(benchmark::State& state) { \
    eval_point_query_benchmark_thread_binding(SZ_TAXI_200M, SZ_TAXI_QUERY_SIZE, state, *this);                     \
}                                                 \
BENCHMARK_REGISTER_F(MicroBenchmarkFixture, NODE_SIZE_QUERY_POINT_ ## NAME)->Unit(benchmark::kMillisecond)->UseRealTime()->QUERY_ITERATIONS_AND_REPETITIONS->Args({SZ_TAXI_XL_INITIAL_POINTS_AMONT+SZ_TAXI_XL_ADDED_POINTS_AMONT,1, OPTIMAL_NUMBER_POINT_QUERY_THREADS});\

#define NODE_SIZE_QUERY_STATS(NAME, TREE_TYPE) \
BENCHMARK_TEMPLATE_DEFINE_F(MicroBenchmarkFixture, NODE_SIZE_QUERY_POINT_STATS_ ## NAME, argument_type<void(TREE_TYPE)>::type)(benchmark::State& state) { \
    eval_point_query_benchmark_thread_binding(SZ_TAXI_200M, SZ_TAXI_QUERY_SIZE, state, *this);                     \
}                                                 \
BENCHMARK_REGISTER_F(MicroBenchmarkFixture, NODE_SIZE_QUERY_POINT_STATS_ ## NAME)->Unit(benchmark::kMillisecond)->UseRealTime()->Iterations(1)->Repetitions(1)->Args({SZ_TAXI_XL_INITIAL_POINTS_AMONT+SZ_TAXI_XL_ADDED_POINTS_AMONT,1, OPTIMAL_NUMBER_POINT_QUERY_THREADS});\


NODE_SIZE_QUERY(38_4, (PearTree<38, 4, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(38_8, (PearTree<38, 8, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(38_12, (PearTree<38, 12, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(38_16, (PearTree<38, 16, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(38_19, (PearTree<38, 19, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(30_10, (PearTree<30, 10, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(46_14, (PearTree<46, 14, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(54_16, (PearTree<54, 16, float, PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY(62_18, (PearTree<62, 18, float, PEAR_STRAT_BASIC_VERSION(1024)>))
//

NODE_SIZE_QUERY_STATS(38_12, (PearTree<38, 12, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(30_10, (PearTree<30, 10, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(46_14, (PearTree<46, 14, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(54_16, (PearTree<54, 16, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(62_18, (PearTree<62, 18, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(38_4, (PearTree<38, 4, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(38_8, (PearTree<38, 8, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(38_16, (PearTree<38, 16, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))
NODE_SIZE_QUERY_STATS(38_19, (PearTree<38, 19, float, PEAR_STRAT_QUERY_STATS+PEAR_STRAT_BASIC_VERSION(1024)>))

